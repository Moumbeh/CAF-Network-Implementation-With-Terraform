trigger: none

pool:
  vmImage: ubuntu-latest

variables:
  bkstrgrg: 'CAF-RG'
  bkstrg: 'cafstorageacc123'
  bkcontainer: 'tf-files'
  bkstrkey: 'network-tfstate'

stages:
  - stage: tf_validate
    jobs:
      - job: Validate
        continueOnError: false
        steps:
          - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
            displayName: tf-install
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV3@3
            displayName: Init
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)'
              backendServiceArm: 'azure-devops'
              backendAzureRmResourceGroupName: '$(bkstrgrg)'
              backendAzureRmStorageAccountName: '$(bkstrg)'
              backendAzureRmContainerName: '$(bkcontainer)'
              backendAzureRmKey: '$(bkstrgkey)'
          - task: TerraformTaskV3@3
            displayName: Validate
            inputs:
              provider: 'azurerm'
              command: 'validate'
              workingDirectory: '$(System.DefaultWorkingDirectory)'
  - stage: Terraform_deploy
    condition: succeeded ('tf_validate')
    dependsOn: tf_validate
    jobs:
      - job: Apply
        steps:
          - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
            displayName: tf-install2
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV3@3
            displayName: Init
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)'
              backendServiceArm: 'azure-devops'
              backendAzureRmResourceGroupName: '$(bkstrgrg)'
              backendAzureRmStorageAccountName: '$(bkstrg)'
              backendAzureRmContainerName: '$(bkcontainer)'
              backendAzureRmKey: '$(bkstrgkey)'
          - task: TerraformTaskV3@3
            displayName: Plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: '$(System.DefaultWorkingDirectory)'
              environmentServiceNameAzureRM: 'azure-devops'
          - task: TerraformTaskV3@3
            displayName: Apply
            inputs:
              provider: 'azurerm'
              command: 'apply'
              workingDirectory: '$(System.DefaultWorkingDirectory)'
              environmentServiceNameAzureRM: 'azure-devops'
